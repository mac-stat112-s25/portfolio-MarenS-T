---
title: "Wrangling"
format: html
---

```{r}
# Load tidyverse & data
library(tidyverse)
elections <- read.csv("https://mac-stat.github.io/data/election_2020_county.csv")
```


```{r}
# What's the first argument? The second?
select(elections, c(state_name, county_name, dem_pct_20, dem_pct_16))
```

## Exercise 1: "select" Practice

```{r}
elections_small <- elections |>
  select(state_name, county_name, total_votes_20, repub_pct_20, dem_pct_20, total_votes_16, dem_pct_16)

head(elections_small)
```

## Exercise 2: "filter" demo

```{r}
# Keep only data on counties in Hawaii
elections_small |>
 filter(state_name == "Hawaii")
```

```{r}
# What does this do?
elections_small |>
  filter(state_name %in% c("Hawaii", "Delaware"))
```

```{r}
# Keep only data on counties where the Republican got MORE THAN 93.97% of the vote in 2020
# THINK: What variable is relevant here?

elections_small |> 
  filter(repub_pct_20 > 93.97)
```

```{r}
# Keep only data on counties where the Republican got AT LEAST 93.97% of the vote in 2020
# This should have 1 more row (observation) than your answer above

elections_small |> 
  filter(repub_pct_20 >= 93.97)
```

```{r}
# Keep only data on counties in Texas where the Democrat got more than 65% of the vote in 2020
# Do this 2 ways.
# Method 1: 2 filters with 1 condition each
elections_small |>
 filter(state_name == "Texas") |>
 filter(dem_pct_20 > 65)

# Method 2: 1 filter with 2 conditions
elections_small |>
 filter(state_name == "Texas", dem_pct_20 > 65)
```

## Exercise 3: "arrange" demo

```{r}
# Arrange the counties in elections_small from lowest to highest percentage of 2020 Republican support
# Print out just the first 6 rows
elections_small |>
  arrange(repub_pct_20) |>
  head()
```

```{r}
# Arrange the counties in elections_small from highest to lowest percentage of 2020 Republican support
# Print out just the first 6 rows

elections_small |>
  arrange(desc(repub_pct_20)) |>
  head()
```

##Exercise 4: "mutate" demo

### Part a

Create a new column that is the difference between percent of dem and rep support in 2020
```{r}
# What did this code do?
elections_small |>
  mutate(diff_20 = repub_pct_20 - dem_pct_20) |>
  head()
```
calculate the number of republican voters by multiplying total number of voters by the decimal form of the percent of republican voters and creating a new column for this
```{r}
# What did this code do?
elections_small |>
  mutate(repub_votes_20 = round(total_votes_20 * repub_pct_20/100)) |>
  head()
```

True or false whether there were more republican voters by ercentage than democratic voters
```{r}
# What did this code do?
elections_small |>
  mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |>
  head()
```

### Part b

```{r}
# You try
# Define a variable that calculates the change in Dem support in 2020 vs 2016
elections_small |>
 mutate(dem_pct_change = dem_pct_20 - dem_pct_16) |>
 head()
```

```{r}
# You try
# Define a variable that determines whether the Dem support was higher in 2020 than in 2016 (TRUE/FALSE)
elections_small |>
 mutate(dem_pct_20_vs_16 = dem_pct_20 > dem_pct_16) |>
 head()
```

## Exercise 5: Pipe series

### Part a

```{r}
elections_small |>
  filter(state_name == "Wisconsin",
         repub_pct_20 < dem_pct_20) |>
  arrange(desc(total_votes_20)) |>
  head()
```
### Part b

```{r}
# Now try it. Change the order of filter and arrange below.
elections_small |>
  arrange(desc(total_votes_20)) |>
  filter(repub_pct_20 < dem_pct_20, 
    state_name == "Wisconsin") |>
  head()
```

### Part c

**advantaage of filtering before arranging?**

Filter out the unwanted data before arranging it. 

### Part d

```{r}
elections_small |>
  filter(state_name == "Delaware") |>
  mutate(repub_win_20 = repub_pct_20 > dem_pct_20) |>
  select(county_name, repub_pct_20, dem_pct_20, repub_win_20)
```

### Part e

```{r}
# Now try it. Change the order of mutate and select below.
# elections_small |>
  # filter(state_name == "Delaware") |>
  # select(county_name, repub_pct_20, dem_pct_20, repub_win_20) |>
  # mutate(repub_win_20 = repub_pct_20 > dem_pct_20)
```
Error message! cannot select a column that does not exist

## Exercise 6: DIY Pipe Series

### Part a

```{r}
elections |>
  filter(state_name == "Minnesota") |>
  select(county_name, dem_pct_20) |>
  arrange(desc(dem_pct_20))
  
```

### Part b

```{r}
mn_wi <- elections |>
  filter(state_name %in% c("Minnesota", "Wisconsin")) |>
  mutate(dem_vote_change = dem_pct_20 - dem_pct_16) |>
  select(state_name, county_name, dem_pct_20, dem_pct_16, dem_vote_change) |>
  arrange(desc(dem_vote_change))
  
head(mn_wi)
```

### Part c 

```{r}
ggplot(mn_wi, aes(x = dem_vote_change)) + 
  geom_density(fill = "lightpink") +
  facet_wrap("state_name")
```
There was more change in MN than in WI. Mean change in MN was approximately 3 percentage points, while in WI it was closer to 2 percentage points. 

## Exercise 7: "summarize" demo

```{r}
# Calculate the median Repub vote percentage in 2020 across all counties
elections_small |> 
  summarize(median(repub_pct_20))
```

```{r}
# Calculate the median Repub vote percentage in 2020 across all counties
# AND name it "median_repub"
elections_small |> 
  summarize(median_repub = median(repub_pct_20))
```

```{r}
# Calculate the median Repub vote percentage in 2020 across all counties
# AND the total number of votes across all counties
# AND name the results
elections_small |> 
  summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20))
```

## Exercise 8: summarize + group_by demo

```{r}
elections_small |>
  group_by(state_name)
```
```{r}
# Check out the structure before and after group_by
elections_small |>
  class()

elections_small |>
  group_by(state_name) |>
  class()
```

```{r}
# What does this do?
# (What if we didn't use group_by?)
elections_small |>
  group_by(state_name) |>
  summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20))
```

## Exercise 9: DIY

### Part a

```{r}
# Sort the *states* from the most to least total votes cast in 2020

elections_small |>
  group_by(state_name) |>
  arrange(desc(total_votes_20)) |>
  head()
  
```

```{r}
# In 2020, what were the total number of votes for the Democratic candidate and the total number of votes for the Republican candidate in each *state*?

elections_small |>
  group_by(state_name) |>
  mutate(dem_total_20 = total_votes_20 * dem_pct_20) |>
  mutate(rep_total_20 = total_votes_20 * repub_pct_20) |>
  summarize(state_dem_total_20 = sum(dem_total_20), 
            state_rep_total_20 = sum(rep_total_20)) |>
  head()
```

```{r}
# What states did the Democratic candidate win in 2020?
elections_small |> 
  group_by(state_name) |>
  mutate(dem_total_20 = total_votes_20 * dem_pct_20) |>
  mutate(rep_total_20 = total_votes_20 * repub_pct_20) |>
  summarize(state_dem_total_20 = sum(dem_total_20), 
            state_rep_total_20 = sum(rep_total_20)) |>
  filter(state_dem_total_20 > state_rep_total_20) |>
  print()
```

## Exercise 10: New Data

```{r}
world_cup <- read.csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-11-29/worldcups.csv")
```

```{r}
head(world_cup)
```

```{r}
# In what years did Brazil win the World Cup?
world_cup |> 
  filter(winner == "Brazil") |>
  print()
```
```{r}
# What were the 6 World Cups with the highest attendance?
world_cup |>
  arrange(desc(attendance)) |>
  top_n(6, attendance) |>
  print()
```

```{r}
# Construct a univariate plot of goals_scored (no wrangling necessary)
# This provides a visual summary of how the number of goals_scored varies from World Cup to World Cup

ggplot(world_cup, aes(x=goals_scored)) +
  geom_histogram(binwidth = 5)
```

```{r}
# Let's follow up the plot with some more precise numerical summaries
# Calculate the min, median, and max number of goals_scored across all World Cups
# NOTE: Visually compare these numerical summaries to what you observed in the plot

min(world_cup$goals_scored) #70

max(world_cup$goals_scored) #171

mean(world_cup$goals_scored) #121.33

```

```{r}
# Construct a bivariate plot of how the number of goals_scored in the World Cup has changed over the years
# No wrangling necessary

ggplot(world_cup, aes(x=year, y=goals_scored)) +
  geom_point() +
  geom_smooth()

```

```{r}
# Our above summaries might be a bit misleading.
# The number of games played at the World Cup varies.
# Construct a bivariate plot of how the typical number of goals per game has changed over the years

world_cup |>
  group_by(year) |>
  summarize(avg_goals = mean(goals_scored)) |>
    ggplot(aes(x=year, y=avg_goals)) +
      geom_point() +
      geom_smooth()


```

## Exercise 11: practice on my own data

done :)






















```{r}
# Calculate the median 2020 Repub percent and total votes BY STATE
elections_small |> 
  group_by(state_name) |> 
  summarize(median_repub = median(repub_pct_20), total_votes = sum(total_votes_20)) 
```


















